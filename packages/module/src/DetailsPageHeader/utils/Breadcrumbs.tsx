import { v4 as uuidv4 } from 'uuid';
import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';
import React from 'react';

export interface Breadcrumb {
  /** Content rendered inside the breadcrumb item. */
  name: string;
  /** HREF for breadcrumb link. */
  path: string;
  /** Unique identifier for the breadcrumb.  If one is not provided, one will be autogenerated. */
  uuid?: string;
  /** ID for the breadcrumb. */
  id?: string
};

export interface Breadcrumbs {
  /** Array of breadcrumbs. */
  breadcrumbs: Breadcrumb[];
};

export const Breadcrumbs: React.FC<Breadcrumbs> = ({ breadcrumbs }) => {
  const [ crumbs, setCrumbs ] = React.useState<Breadcrumb[]>([]);

  const addUUID = (allData: Breadcrumb[]) => allData.map((item: Breadcrumb) => ({
    ...item,
    uuid: item.uuid || item.id || uuidv4(),
  }));

  React.useEffect(() => {
    setCrumbs(addUUID(breadcrumbs));
  }, [ breadcrumbs ]);

  return (
    <Breadcrumb>
      {crumbs.map((crumb, i, { length }) => {
        const isLast = i === length - 1;

        return (
          <BreadcrumbItem key={crumb.uuid} to={crumb.path} isActive={isLast} data-testid={`breadcrumb-link-${i}`}>
            {crumb.name}
          </BreadcrumbItem>
        );
      })}
    </Breadcrumb>
  );
};

export default Breadcrumbs;
